import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState, useEffect } from "react";
import { Form, Input, Button } from "antd";
import {Form as form2} from '@prisma/client'

type FormData = {
  name: string;
  email: string;
  phone?: string;
};


import { api } from "~/utils/api";

const Home: NextPage = () => {
 // const hello = api.example.hello.useQuery({ text: "from tRPC" });
 const load=api.example.load.useQuery()
 const save=api.example.save.useMutation() 
 const deletAll=api.example.deletAll.useMutation()
 const [form] = Form.useForm();
load.refetch()

  const [show,setShow]=useState(false)
 const [mydata,setmydata]=useState<FormData[]>()
  const [formData, setFormData] = useState<FormData>({ name: "", email: "" });
  const [notification,setNotification]=useState("")
  
  console.log('----------------',load.data)
  useEffect(()=>{
    form.resetFields()
    if(load.data){
      setmydata(load.data as FormData[])
    }
  },[load.data])
  const handleSubmit = () => {
    console.log(formData);
  };

  const handleSaveToDb=()=>{
    form.resetFields
    setNotification('')
    save.mutate({...form.getFieldsValue()})
//   await load.refetch()
    setmydata(load.data as FormData[])
    if(save.isSuccess){
      setNotification('data saved to db')
      
    }
    if(save.isError){
      setNotification('Error while saving data to the db')
    }
   
  }



const handelAddToForm=(e:FormData)=>{
      form.setFieldsValue(e)
}


  const handleDeletAll=()=>{
     deletAll.mutate()
    load.refetch()
  }

  /* useEffect(() => {
    //handleLoadFromLocalStorage();
    //console.log("form data from use effect",formData)
  }, [formData]); */

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex relative min-h-screen flex-col items-center justify-center bg-slate-800">
        <button onClick={()=>{setShow(!show)}} className="absolute top-7 border-white border-2 p-2 rounded-xl text-white text-xl right-7">
            show saved data
           </button>
      {show&&<div  className="absolute top-0 left-0 right-0 bottom-0 z-20 bg-black flex flex-col">
              <button onClick={()=>{setShow(!show)}} className="text-3xl  text-white border ml-auto mr-7 mt-5">X</button>
      </div>}
     {/*  <div className="w-full h-40 mb-5 min-h-40 bg-slate-300 flex overflow-x-auto pt-1 gap-2">
        {load.data&&load.data.map((item,index)=>{
          return <div key={index} onClick={()=>{handelAddToForm({name:item.name,email:item.email ,phone:item.phone as string})}} className="border-2 border-black w-fit h-fit p-2  cursor-pointer hover:bg-blue-900 hover:text-white hover:border-blue-900" >
                <p>name: {item.name}</p>
                <p>email: {item.email}</p>
                <p>phone: {item.phone}</p>
             </div>
        })}
      </div> */}

      <Form form={form} onFinish={handleSubmit}  >
      <Form.Item
        name="name"
        label="Name"
        rules={[{ required: true, message: "Please enter your name" }]}
      >
        <Input
          onChange={(e) =>
            setFormData((prevData) => ({
              ...prevData,
              name: e.target.value,
            }))
          }
        />
      </Form.Item>

      <Form.Item
        name="email"
        label="Email"
        rules={[{ required: true, message: "Please enter your email" }]}
      >
        <Input
          type="email"
          onChange={(e) =>
            setFormData((prevData) => ({
              ...prevData,
              email: e.target.value,
            }))
          }
        />
      </Form.Item>

      <Form.Item name="phone" label="Phone">
        <Input
          onChange={(e) =>
            setFormData((prevData) => ({
              ...prevData,
              phone: e.target.value,
            }))
          }
        />
      </Form.Item>

      <Button  type="primary" htmlType="submit">
        Submit
      </Button>
     {/*  <Button  type="primary" onClick={handleSaveToLocalStorage}>
        Save 
      </Button> */}
      {/* <Button type="primary" onClick={handleLoadFromLocalStorage}>
        Load from localStorage
      </Button> */}
      <Button type="primary" onClick={handleSaveToDb}>
        Save to db
      </Button>
     {/*  <Button type="primary" onClick={handleLoadFromDb}>
        Load from db
      </Button> */}
      <br/>
      <button className="mt-5 border-black border-2  p-2" onClick={handleDeletAll}>Delet all from db</button>
    </Form>

      </main>
    </>
  );
};

export default Home;
